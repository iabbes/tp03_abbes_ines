{"ast":null,"code":"import { Observable, Subject, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/plane.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../composant-afficher-avion/composant-afficher-avion.component\";\n\nfunction ComposantListAvionComponent_app_composant_afficher_avion_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-composant-afficher-avion\", 5);\n  }\n\n  if (rf & 2) {\n    const planeElement_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"plane\", planeElement_r1);\n  }\n}\n\nexport class ComposantListAvionComponent {\n  constructor(planeService) {\n    this.planeService = planeService;\n  }\n\n  ngOnInit() {\n    this.plane$ = this.planeService.getAllPlanes();\n    this.planeFilter$ = this.plane$;\n    this.destroy$ = new Subject();\n  }\n\n  filter(name) {\n    this.plane$ = this.planeFilter$.pipe(map(projects => projects.filter(proj => proj.airplane.includes(name))));\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n  }\n\n}\n\nComposantListAvionComponent.ɵfac = function ComposantListAvionComponent_Factory(t) {\n  return new (t || ComposantListAvionComponent)(i0.ɵɵdirectiveInject(i1.PlaneService));\n};\n\nComposantListAvionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ComposantListAvionComponent,\n  selectors: [[\"app-composant-list-avion\"]],\n  decls: 6,\n  vars: 4,\n  consts: [[1, \"container\"], [1, \"col-md-12\"], [1, \"search-name\"], [\"type\", \"text\", \"name\", \"search\", \"autocomplete\", \"on\", \"placeholder\", \" SEARCH  \", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"plane\", 4, \"ngFor\", \"ngForOf\"], [3, \"plane\"]],\n  template: function ComposantListAvionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function ComposantListAvionComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.filter($event);\n      })(\"ngModelChange\", function ComposantListAvionComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.searchText = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(4, ComposantListAvionComponent_app_composant_afficher_avion_4_Template, 1, 1, \"app-composant-afficher-avion\", 4);\n      i0.ɵɵpipe(5, \"async\");\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.searchText);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(5, 2, ctx.plane$));\n    }\n  },\n  dependencies: [i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.ComposantAfficherAvionComponent, i2.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb21wb3NhbnQtbGlzdC1hdmlvbi5jb21wb25lbnQuY3NzIn0= */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,UAAT,EAAqBC,OAArB,EAA8BC,GAA9B,QAAiD,MAAjD;;;;;;;;;ICMYC;;;;;IAA2EA;;;;ADIvF,OAAM,MAAOC,2BAAP,CAAkC;EAMtCC,YAAoBC,YAApB,EAA8C;IAA1B;EAA+B;;EAEnDC,QAAQ;IACN,KAAKC,MAAL,GAAc,KAAKF,YAAL,CAAkBG,YAAlB,EAAd;IACA,KAAKC,YAAL,GAAoB,KAAKF,MAAzB;IACA,KAAKG,QAAL,GAAgB,IAAIV,OAAJ,EAAhB;EACD;;EAEDW,MAAM,CAACC,IAAD,EAAK;IACT,KAAKL,MAAL,GAAa,KAAKE,YAAL,CAAkBI,IAAlB,CACXZ,GAAG,CAACa,QAAQ,IAAGA,QAAQ,CAACH,MAAT,CAAgBI,IAAI,IAAIA,IAAI,CAACC,QAAL,CAAcC,QAAd,CAAuBL,IAAvB,CAAxB,CAAZ,CADQ,CAAb;EAID;;EAKDM,WAAW;IACT,KAAKR,QAAL,CAAcS,IAAd,CAAmB,IAAnB;EACD;;AA1BqC;;;mBAA3BhB,6BAA2BD;AAAA;;;QAA3BC;EAA2BiB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVxCtB,+BAAuB,CAAvB,EAAuB,KAAvB,EAAuB,CAAvB,EAAuB,CAAvB,EAAuB,KAAvB,EAAuB,CAAvB,EAAuB,CAAvB,EAAuB,OAAvB,EAAuB,CAAvB;MAIuBA;QAAA,OAAiBuB,kBAAjB;MAA+B,CAA/B,EAAgC,eAAhC,EAAgC;QAAA;MAAA,CAAhC;MAAPvB;MAEJA;;MAEJA;;;;MAJ+FA;MAAAA;MAEpCA;MAAAA","names":["Observable","Subject","map","i0","ComposantListAvionComponent","constructor","planeService","ngOnInit","plane$","getAllPlanes","planeFilter$","destroy$","filter","name","pipe","projects","proj","airplane","includes","ngOnDestroy","next","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Angular\\tp03_abbes_ines\\src\\app\\composant-list-avion\\composant-list-avion.component.ts","D:\\Angular\\tp03_abbes_ines\\src\\app\\composant-list-avion\\composant-list-avion.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Observable, Subject, map, filter } from 'rxjs';\nimport { Plane } from '../models/plane.model';\nimport { PlaneService } from '../services/plane.service';\n\n\n@Component({\n  selector: 'app-composant-list-avion',\n  templateUrl: './composant-list-avion.component.html',\n  styleUrls: ['./composant-list-avion.component.css']\n})\nexport class ComposantListAvionComponent implements OnInit {\n  searchText: any;\n  plane$ !: Observable<Plane[]>;\n  planeFilter$ !: Observable<Plane[]>;\n  private destroy$!: Subject<boolean>;\n\n  constructor(private planeService: PlaneService) { }\n\n  ngOnInit(): void {\n    this.plane$ = this.planeService.getAllPlanes();\n    this.planeFilter$ = this.plane$\n    this.destroy$ = new Subject<boolean>();\n  }\n\n  filter(name) {\n    this.plane$= this.planeFilter$.pipe(\n      map(projects =>projects.filter(proj => proj.airplane.includes(name))\n      )\n    );\n  }\n\n\n  \n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n  }\n\n}\n","\n<div class=\"container\">\n    <div class=\"col-md-12\">\n          \n            <div class=\"search-name\">\n                <input (ngModelChange)=\"filter($event)\" class=\"form-control\" type=\"text\" name=\"search\" [(ngModel)]=\"searchText\" autocomplete=\"on\" placeholder=\" SEARCH  \">\n            </div>\n            <app-composant-afficher-avion *ngFor=\"let planeElement of plane$  | async\" [plane]=\"planeElement\" >\n            </app-composant-afficher-avion>\n        </div>\n            \n</div>\n\n"]},"metadata":{},"sourceType":"module"}